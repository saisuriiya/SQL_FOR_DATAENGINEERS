CREATE DATABASE IF NOT EXISTS db;

USE db;

DROP DATABASE IF EXISTS db;

CREATE DATABASE db;

USE db;

CREATE TABLE student2 (
    name VARCHAR(40),
    id INT PRIMARY KEY
);

-- You cannot rename a column using MODIFY with "AS". Use CHANGE instead:
ALTER TABLE student2 CHANGE name Student_name VARCHAR(40);

CREATE TABLE Student3 (
    name VARCHAR(30),
    age INT,
    id INT PRIMARY KEY
);

INSERT INTO Student3 (name, age, id) VALUES
('Abi', 20, 1),
('Bob', 24, 2),
('Cat', 30, 4);

DESC Student3;

SELECT * FROM Student3;

ALTER TABLE Student3 ADD dept VARCHAR(40);

INSERT INTO Student3 (name, age, id, dept) VALUES
('Jansi', 42, 5, 'Library');

UPDATE Student3 SET dept = 'IT' WHERE id = 4;

START TRANSACTION;

INSERT INTO Student3 (name, age, id) VALUES
('Mary', 20, 3);

SAVEPOINT before_update;

UPDATE Student3 SET name = 'marie' WHERE id = 3;

ROLLBACK TO before_update;

COMMIT;
SELECT * FROM Student3;


DROP DATABASE IF EXISTS company_db;
CREATE DATABASE company_db;
USE company_db;

CREATE TABLE employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    hire_date DATE	
);

CREATE TABLE employees_log (
    log_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    action_type VARCHAR(20),
    action_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DELIMITER //
CREATE TRIGGER after_employee_insert
AFTER INSERT ON employees
FOR EACH ROW
BEGIN
    INSERT INTO employees_log (employee_id, action_type)
    VALUES (NEW.employee_id, 'NEW_HIRE');
END//
DELIMITER ;

INSERT INTO employees (first_name, last_name, email, hire_date) VALUES
('Michael', 'Scott', 'michael.scott@company.com', '2023-01-01'),
('Dwight', 'Schrute', 'dwight.schrute@company.com', '2023-02-15');

SELECT * FROM employees;

SELECT * FROM employees_log;

ALTER TABLE employees
ADD COLUMN department VARCHAR(50);

UPDATE employees
SET department = 'Sales'
WHERE employee_id = 2;
SELECT * FROM employees;
DELETE FROM employees
WHERE employee_id = 1;
SELECT * FROM employees;
SELECT * FROM employees_log;

CREATE DATABASE IF NOT EXISTS company;

USE company;

DROP TABLE IF EXISTS Branch;

CREATE TABLE Branch (
    branch_id INT PRIMARY KEY,
    branch_name VARCHAR(100),
    mgr_id INT,
    mgr_start_date DATE
);

INSERT INTO Branch (branch_id, branch_name, mgr_id, mgr_start_date) VALUES
(1, 'Corporate', 100, '2006-02-09'),
(2, 'Scranton', 102, '1992-04-06'),
(3, 'Stamford', 106, '1998-02-13');

SELECT * FROM Branch;

CREATE DATABASE IF NOT EXISTS company;

USE company;

DROP TABLE IF EXISTS Branch;

CREATE TABLE Branch (
    branch_id INT PRIMARY KEY,
    branch_name VARCHAR(100),
    mgr_id INT,
    mgr_start_date DATE
);

INSERT INTO Branch (branch_id, branch_name, mgr_id, mgr_start_date) VALUES
(1, 'Corporate', 100, '2006-02-09'),
(2, 'Scranton', 102, '1992-04-06'),
(3, 'Stamford', 106, '1998-02-13');

DROP TABLE IF EXISTS Works_With;

CREATE TABLE Works_With (
    emp_id INT,
    client_id INT,
    total_sales INT
);

INSERT INTO Works_With (emp_id, client_id, total_sales) VALUES
(105, 400, 55000),
(102, 401, 267000),
(108, 402, 22500),
(107, 403, 5000),
(108, 403, 12000),
(105, 404, 33000),
(107, 405, 26000),
(102, 406, 15000),
(105, 406, 130000);

DROP TABLE IF EXISTS Branch_Supplier;

CREATE TABLE Branch_Supplier (
    branch_id INT,
    supplier_name VARCHAR(100),
    supply_type VARCHAR(100)
);

INSERT INTO Branch_Supplier (branch_id, supplier_name, supply_type) VALUES
(2, 'Hammer Mill', 'Paper'),
(2, 'Uni-ball', 'Writing Utensils'),
(3, 'Patriot Paper', 'Paper'),
(3, 'J.T. Forms & Labels', 'Custom Forms'),
(3, 'Uni-ball', 'Writing Utensils'),
(3, 'Hammer Mill', 'Paper'),
(3, 'Stamford Lables', 'Custom Forms');

SELECT * FROM Branch;
SELECT * FROM Works_With;
SELECT * FROM Branch_Supplier;
